{
  "apiVersion": "1.0.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:5000",
  "resourcePath": "/places",
  "produces": [
    "application/json"
  ],
  "apis": [
    {
      "path": "/places",
      "operations": [
        {
          "method": "GET",
          "summary": "Get list of places",
          "notes": "",
          "type": "void",
          "nickname": "getAllPlaces",
          "consumes": [
            "application/json"
          ],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "/places",
      "operations": [
        {
          "method": "POST",
          "summary": "Add a new place",
          "notes": "",
          "type": "void",
          "nickname": "addPlace",
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "place[name]",
              "description": "Name of the place",
              "required": true,
              "type": "string",
              "paramType": "string"
            },
            {
              "name": "place[address]",
              "description": "Address of the place",
              "required": true,
              "type": "string",
              "paramType": "string"
            },
            {
              "name": "place[description]",
              "description": "Description of the place",
              "required": true,
              "type": "string",
              "paramType": "body"
            },
            {
              "name": "place[latitude]",
              "description": "Latitude of the place",
              "required": true,
              "type": "string",
              "paramType": "string"
            },
            {
              "name": "place[longitude]",
              "description": "Longitude of the place",
              "required": true,
              "type": "string",
              "paramType": "string"
            }
          ],
          "responseMessages": [
            {
              "code": 405,
              "message": "Invalid input"
            }
          ]
        }
      ]
    },
    {
      "path": "/places/{id}",
      "operations": [
        {
          "method": "GET",
          "summary": "Find place by ID",
          "notes": "Returns a place based on ID",
          "type": "Place",
          "nickname": "getByPlaceId",
          "authorizations": {},
          "parameters": [
            {
              "name": "id",
              "description": "ID of place that needs to be fetched",
              "required": true,
              "type": "integer",
              "format": "int64",
              "paramType": "path",
              "minimum": "1.0",
              "maximum": "100000.0"
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid ID supplied"
            },
            {
              "code": 404,
              "message": "Place not found"
            }
          ]
        }
      ]
    },
    {
      "path": "/places/{id}/comments",
      "operations": [
        {
          "method": "GET",
          "summary": "Find comments by place ID",
          "notes": "Returns comments based on place ID",
          "type": "Place",
          "nickname": "getCommentsByPlaceId",
          "authorizations": {},
          "parameters": [
            {
              "name": "id",
              "description": "ID of place that needs to be fetched",
              "required": true,
              "type": "integer",
              "format": "int64",
              "paramType": "path",
              "minimum": "1.0",
              "maximum": "100000.0"
            }
          ],
          "responseMessages": [
            {
              "code": 400,
              "message": "Invalid ID supplied"
            },
            {
              "code": 404,
              "message": "Place not found"
            }
          ]
        }
      ]
    },{
      "path": "/places/{id}/comments",
      "operations": [
        {
          "method": "POST",
          "summary": "Add a new comment to a place",
          "notes": "",
          "type": "void",
          "nickname": "addCommentToPlace",
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "autorh": "comment[author]",
              "description": "Author of the comment",
              "required": true,
              "type": "string",
              "paramType": "string"
            },
            {
              "name": "comment[mark]",
              "description": "Mark",
              "required": true,
              "type": "int",
              "paramType": "int",
              "minimum": "0",
              "maximum": "10"
            },
            {
              "name": "comment[text]",
              "description": "Comment",
              "required": true,
              "type": "string",
              "paramType": "body"
            }
          ],
          "responseMessages": [
            {
              "code": 405,
              "message": "Invalid input"
            }
          ]
        }
      ]
    }
  ]
}
